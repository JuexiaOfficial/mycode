%YAML:1.0

#common parameters
imu_topic: "/IMU_data"
image_topic: "/camera/color/image_raw"
output_path: "/home/qizhengxun/Desktop/ws/ros_modify_PL_VINS_ws/output"

#camera calibration 
model_type: PINHOLE
camera_name: camera
image_width: 1280
image_height: 720
distortion_parameters:
   k1: 0.0
   k2: 0.0
   p1: 0.0
   p2: 0.0

# 果园realsense外参
projection_parameters:
   fx: 909.911865234375
   fy: 908.6969604492188
   cx: 642.4598388671875
   cy: 378.6449279785156

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 0   # 0  Have an accurate extrinsic parameters. 
                        # 1  Have an initial guess about extrinsic parameters.
                        # 2  Don't know anything about extrinsic parameters.
ex_calib_result_path: "/config/euroc/ex_calib_result.yaml"  # If you choose 1 or 2, the extrinsic calibration result will be written vins_folder_path + ex_calib_result_path.                        
#If you choose 0 or 1, you should write down the following matrix.

#Rotation from camera frame to imu frame, imu^R_cam
extrinsicRotation: !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data: [0, 0, 1,
          -1, 0, 0,
          0, -1, 0]

#Translation from camera frame to imu frame, imu^T_cam
extrinsicTranslation: !!opencv-matrix
   rows: 3
   cols: 1
   dt: d
   data: [0, 0, 0]

#feature traker paprameters
max_cnt: 300                     # max feature number in feature tracking
min_dist: 30                     # min distance between two features 
freq: 10                         # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0                 # ransac threshold (pixel)
show_track: 1                    # publish tracking image as topic
equalize: 1                      # if image is too dark or light, trun on equalize to find enough features
fisheye: 0                       # if using fisheye, trun on it. A circle mask will be loaded to remove edge noisy points

#optimization parameters
max_solver_time: 0.06            # max solver itration time (ms), to guarantee real time
max_num_iterations: 10           # max solver itrations, to guarantee real time
keyframe_parallax: 10.0            # keyframe selection threshold (pixel)

acc_n: 0.015785296996605466          # accelerometer measurement noise standard deviation. #0.2   0.04
gyr_n: 0.0016540582937676679         # gyroscope measurement noise standard deviation.     #0.05  0.004
acc_w: 0.00013490592727814123        # accelerometer bias random work noise standard deviation.  #0.02
gyr_w: 7.959848163284932e-06         # gyroscope bias random work noise standard deviation.     #4.0e-5
g_norm: 9.7946     


#loop closure parameters
loop_closure: 1                 # start loop closure
load_previous_pose_graph: 0     # load and reuse previous pose graph; load from 'pose_graph_save_path'
fast_relocalization: 0          # useful in real-time and large project
pose_graph_save_path: "/home/qizhengxun/Desktop/ws/ros_modify_PL_VINS_ws/output/pose_graph/" # save and load path

#unsynchronization parameters
estimate_td: 1                      # online estimate time offset between camera and imu
td: 0.0                             # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)
#实验实验半天，结果estimate_td没开，笑死我了

#rolling shutter parameters
rolling_shutter: 0                  # 0: global shutter camera, 1: rolling shutter camera
rolling_shutter_tr: 0               # unit: s. rolling shutter read out time per frame (from data sheet). 

#visualization parameters
save_image: 1                   # save image in pose graph for visualization prupose; you can close this function by setting 0 
visualize_imu_forward: 0        # output imu forward propogation to achieve low latency and high frequence results
visualize_camera_size: 0.4      # size of camera marker in RVIZ

